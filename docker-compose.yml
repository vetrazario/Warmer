version: '3.8'

services:
  app:
    build: .
    container_name: email-warmer-app
    restart: always
    ports:
      - "${PORT:-5000}:5000"
    volumes:
      - ./instance:/app/instance
      - ./app:/app/app
      - ./.env:/app/.env
    environment:
      - MONGO_URI=mongodb://mongo:27017/email_warmer
      - SECRET_KEY=${SECRET_KEY:-dg6MQ9L4pZxbCE3r8F1h2Jk5VyTsW7D0}
      - DEBUG=${DEBUG:-False}
      - SCHEDULER_ENABLED=${SCHEDULER_ENABLED:-True}
      - TZ=UTC
      - PORT=${PORT:-5000}
      - FLASK_APP=app
      - FLASK_ENV=production
    depends_on:
      - mongo
    networks:
      - email-warmer-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    command: ["gunicorn", "--bind", "0.0.0.0:5000", "--workers", "4", "--timeout", "120", "wsgi:app"]

  mongo:
    image: mongo:4.4
    container_name: email-warmer-mongo
    restart: always
    volumes:
      - /var/data/mongodb:/data/db
    ports:
      - "27017:27017"
    networks:
      - email-warmer-network
    environment:
      - MONGO_INITDB_DATABASE=email_warmer
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo localhost:27017/email_warmer --quiet
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  email-warmer-network:
    driver: bridge

volumes:
  mongo-data: 